#!/bin/bash
function out {
        printf "%s\n"
        printf '%.s-' {1..30}
        printf "%s\n"
        printf "Образ называется: $nameOfProgram"
        printf "%s\n"
        printf "Образ запущен на 10.0.2.15:$PORT %s\n"
        printf "%s\n" "Теперь необходимо пробросить порты, где хост будет 127.0.0.1:8888 (порт можете указать любой)"
        printf "А гость -  10.0.2.15:$PORT"
        printf "%s\n"
        printf '%.s-' {1..30}
        printf "%s\n"
}
PORT=$((8000 + RANDOM % 999 + 1))
read -p "Введите имя вашей программы (по умолчанию: mySite) " nameOfProgram
nameOfProgram=${nameOfProgram:-mySite}
if [ -e /var/lib/docker/  ]
then
        if docker build -t me/site $PWD/finished && docker run --name $nameOfProgram -p $PORT:8080 -d me/site; then
                out
        else
                echo "Ошибка! Попробуйте использовать скрипт stop"
        fi
else
        sudo apt-get update
        sudo apt-get install \
            ca-certificates \
            curl \
            gnupg
        sudo mkdir -m 0755 -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo \
          "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

        docker build -t me/site $PWD/finishied
        docker run --name $nameOfProgram -p $PORT:8080 -d me/site
        out
fi
echo -e "name=$nameOfProgram \nPORT=$PORT \nimage=me/site" > output
